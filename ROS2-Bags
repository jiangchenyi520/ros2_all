{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyPNH20ob9HmmJ5w3mj3+mpi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Introduccion"],"metadata":{"id":"CBdQsjeoUz8g"}},{"cell_type":"markdown","source":["A la hora de testear nuestros nodos o el sistema completo es imprescindible tener un conjunto de estímulos que nos permitan testear el comportamiento de nuestro robot en diferentes circunstancias. Para generar estos estímulos, o para generar el patrón de salida de los mismos podemos hacer uso del comando bag de ROS2.\n","\n","Este comando va a permitir:\n","\n","- grabar los mensajes que se están publicando en los topics\n","\n","- reproducir los mensajes que han sido previamente grabados\n","\n","Veamos cómo funciona. Utilizaremos como ejemplo el servidor del servicio creado en el colab[ ROS2-A09 Servicios](https://colab.research.google.com/drive/1SMMXHjgHk1v-ejmUlRC9FcAbwtNHuux4?usp=sharing)."],"metadata":{"id":"BjMBxMynU6he"}},{"cell_type":"markdown","source":["# Comando ROS2 bag"],"metadata":{"id":"HOZpybYiWFrk"}},{"cell_type":"markdown","source":["En primer lugar es necesario que creemos un directorio en el que almacenaremos todos los mensajes del topic a monitorizar. Nos situaremos en ese directorio para ejecutar los comandos ros2 bag.\n"],"metadata":{"id":"MC_XlOGIWJ7K"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"47V5Q0PyUyVn"},"outputs":[],"source":["mkdir bag_files\n","cd bag_files"]},{"cell_type":"markdown","source":["Para grabar los mensajes que se están publicando en un determinado topic usamos el comando:"],"metadata":{"id":"Sz1HLdbZW0Yd"}},{"cell_type":"code","source":["ros2 bag record topic_name"],"metadata":{"id":"XqVEwC8bW_xP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Donde topic_name es el nombre del topic que queremmos monitorizar. Si queremos grabar los mensajes de todos los topics pondremos :"],"metadata":{"id":"6GCa85YpXDFd"}},{"cell_type":"code","source":["ros2 bag record -a"],"metadata":{"id":"W-kRxRRFXNQv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Para poder grabar estos mensajes es necesario que estemos ejecutando algún nodo, así que vamos a lanzar los siguientes paquetes para poder hacer una prueba:"],"metadata":{"id":"dmpDGWdSXQE2"}},{"cell_type":"markdown","source":["En el [Terminal1] abriremos Gazebo con el mundo vacío. Recordad que debéis estar en el directorio turtlebot3_ws, y tener activado rosenv."],"metadata":{"id":"J6FatJ1BXbaw"}},{"cell_type":"code","source":["#[Terminal 1]\n","ros2 launch turtlebot3_gazebo empty_world.launch.py"],"metadata":{"id":"kRuyDMGwXj82"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["En el Terminal2 lanzaremos el servidor del servicio que implementamos en el colab ROS2-A09 Servicios."],"metadata":{"id":"OGauHOahX9Kc"}},{"cell_type":"code","source":["#[Terminal2]\n","ros2 launch my_first_service movement_server_launch.launch.py"],"metadata":{"id":"c5_OyhPDYG2f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["En el Terminal3 nos situaremos en el directorio bag_files y lanzaremos el comando bag para grabar los mensajes del topic cmd_vel."],"metadata":{"id":"dlrmkzH9YTJl"}},{"cell_type":"code","source":["#[Terminal3]\n","cd bag_files\n","ros2 bag record cmd_vel"],"metadata":{"id":"RGfbcsXLYh4F"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["En el Terminal 4 haremos la llamada al servicio para que el robot comience a moverse, de ese modo estaremos publicando en el topic /cmd_vel y se estarán gabando esos mensajes."],"metadata":{"id":"26USveJwYnp4"}},{"cell_type":"code","source":["#[Terminal4]\n","ros2 service call /movement custom_interface/srv/MyMoveMsg \"move: 'delante'\""],"metadata":{"id":"m9aVBMZfcf8x"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Dejaremos que el robot se mueva un rato y luego lo pararemos lanzando de nuevo una llamada al servicio. "],"metadata":{"id":"NyQPTwwNdQvx"}},{"cell_type":"code","source":["#[Terminal4]\n","ros2 service call /movement custom_interface/srv/MyMoveMsg \"move: 'parar'\""],"metadata":{"id":"R9ynxNP4YnT2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Paramos también la grabación, haciendo Ctrl + C sobre la terminal 3. Ahora podemos ir al directorio bag_files y revisar los ficheros que se han creado. Veréis que aparece un directorio que se denomina rosbag2_fecha_hora y dentro del mismo aparecen dos ficheros:\n","- metadata.yaml\n","\n","- rosbag2_fecha_hora.db3\n","\n","El primero contiene los metadatos de la grabación realizada, esto es, el nombre del fichero en el que se encuentran los mensajes grabados, información del tiempo de grabación, topic que se ha monitorizado, tipo de mensajes etc."],"metadata":{"id":"4vr-fUvrdj6K"}},{"cell_type":"code","source":["rosbag2_bagfile_information:\n","  version: 4\n","  storage_identifier: sqlite3\n","  relative_file_paths:\n","    - rosbag2_2022_03_26-10_00_01_0.db3\n","  duration:\n","    nanoseconds: 25682738307\n","  starting_time:\n","    nanoseconds_since_epoch: 1648285219774085401\n","  message_count: 2\n","  topics_with_message_count:\n","    - topic_metadata:\n","        name: /cmd_vel\n","        type: geometry_msgs/msg/Twist\n","        serialization_format: cdr\n","        offered_qos_profiles: \"\"\n","      message_count: 2\n","  compression_format: \"\"\n","  compression_mode: \"\""],"metadata":{"id":"TojrhSACetCJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["El fichero de extensión db3 contiene los mensajes grabados. Este fichero podremos reproducirlo utilizando el comando ros2 play."],"metadata":{"id":"zi1wUxMGe8ga"}},{"cell_type":"code","source":["ros2 bag play rosbag2_2022_03_26-10_00_01_0.db3"],"metadata":{"id":"pokDKC0LfMZN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Al hacerlo el robot se moverá recorriendo la misma trayectoria que hicistéis la primera vez."],"metadata":{"id":"7ecIOAtjf5Sc"}}]}